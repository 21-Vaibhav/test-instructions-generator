{"ast":null,"code":"var _jsxFileName = \"C:\\\\myracle-task\\\\llm-for-testing-instructions\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n\n  // Function to upload image and extract text\n  async function extractTextFromImage(imageFile) {\n    const formData = new FormData();\n    formData.append(\"file\", imageFile);\n    try {\n      var _resultResponse$data$, _resultResponse$data$2, _resultResponse$data$3;\n      // Upload the image\n      const uploadResponse = await axios.post(`https://generativelanguage.googleapis.com/v1beta/files:upload?key=${process.env.REACT_APP_API_KEY}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const imageUri = uploadResponse.data.file.uri;\n      console.log(`Uploaded file as: ${imageUri}`);\n\n      // Extract text from image\n      const resultResponse = await axios.post(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`, {\n        prompt: \"Extract the text in the image verbatim\",\n        fileData: {\n          fileUri: imageUri,\n          mimeType: \"image/jpeg\"\n        }\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const extractedText = ((_resultResponse$data$ = resultResponse.data.candidates[0]) === null || _resultResponse$data$ === void 0 ? void 0 : (_resultResponse$data$2 = _resultResponse$data$.content) === null || _resultResponse$data$2 === void 0 ? void 0 : (_resultResponse$data$3 = _resultResponse$data$2.parts[0]) === null || _resultResponse$data$3 === void 0 ? void 0 : _resultResponse$data$3.text) || \"No text extracted\";\n      return extractedText;\n    } catch (error) {\n      console.error(\"Text extraction failed:\", error);\n      return null;\n    }\n  }\n  async function generateAnswer(e) {\n    e.preventDefault();\n    setGeneratingAnswer(true);\n    setAnswer(\"Loading your answer... \\n It might take up to 10 seconds\");\n    try {\n      if (image) {\n        const extractedText = await extractTextFromImage(image);\n        if (extractedText) {\n          var _response$data$candid, _response$data$candid2, _response$data$candid3;\n          const response = await axios.post(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`, {\n            contents: [{\n              parts: [{\n                text: `Write test instructions for the following text: ${extractedText}`\n              }]\n            }]\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          setAnswer(((_response$data$candid = response.data.candidates[0]) === null || _response$data$candid === void 0 ? void 0 : (_response$data$candid2 = _response$data$candid.content) === null || _response$data$candid2 === void 0 ? void 0 : (_response$data$candid3 = _response$data$candid2.parts[0]) === null || _response$data$candid3 === void 0 ? void 0 : _response$data$candid3.text) || \"No instructions generated\");\n        } else {\n          setAnswer(\"Failed to extract text from the image.\");\n        }\n      } else {\n        setAnswer(\"No image selected.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating answer:\", error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n    setGeneratingAnswer(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: generateAnswer,\n        className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-blue-500 mb-4 animate-bounce\",\n          children: \"Chat AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          className: \"border border-gray-300 rounded w-full my-2 min-h-fit p-3 transition-all duration-300 focus:border-blue-400 focus:shadow-lg\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask anything\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"my-2\",\n          accept: \"image/*\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${generatingAnswer ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n          disabled: generatingAnswer,\n          children: \"Generate answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"p-4\",\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"HZntgBUKvHntBk3GihBAqAdgkNg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","ReactMarkdown","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","question","setQuestion","image","setImage","answer","setAnswer","generatingAnswer","setGeneratingAnswer","extractTextFromImage","imageFile","formData","FormData","append","_resultResponse$data$","_resultResponse$data$2","_resultResponse$data$3","uploadResponse","post","process","env","REACT_APP_API_KEY","headers","imageUri","data","file","uri","console","log","resultResponse","prompt","fileData","fileUri","mimeType","extractedText","candidates","content","parts","text","error","generateAnswer","e","preventDefault","_response$data$candid","_response$data$candid2","_response$data$candid3","response","contents","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","required","value","onChange","target","placeholder","type","accept","files","disabled","_c","$RefreshReg$"],"sources":["C:/myracle-task/llm-for-testing-instructions/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n\n  // Function to upload image and extract text\n  async function extractTextFromImage(imageFile) {\n    const formData = new FormData();\n    formData.append(\"file\", imageFile);\n\n    try {\n      // Upload the image\n      const uploadResponse = await axios.post(\n        `https://generativelanguage.googleapis.com/v1beta/files:upload?key=${process.env.REACT_APP_API_KEY}`,\n        formData,\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      );\n\n      const imageUri = uploadResponse.data.file.uri;\n      console.log(`Uploaded file as: ${imageUri}`);\n\n      // Extract text from image\n      const resultResponse = await axios.post(\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`,\n        {\n          prompt: \"Extract the text in the image verbatim\",\n          fileData: { fileUri: imageUri, mimeType: \"image/jpeg\" },\n        },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n\n      const extractedText =\n        resultResponse.data.candidates[0]?.content?.parts[0]?.text ||\n        \"No text extracted\";\n      return extractedText;\n    } catch (error) {\n      console.error(\"Text extraction failed:\", error);\n      return null;\n    }\n  }\n\n  async function generateAnswer(e) {\n    e.preventDefault();\n    setGeneratingAnswer(true);\n    setAnswer(\"Loading your answer... \\n It might take up to 10 seconds\");\n\n    try {\n      if (image) {\n        const extractedText = await extractTextFromImage(image);\n        if (extractedText) {\n          const response = await axios.post(\n            `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`,\n            {\n              contents: [\n                {\n                  parts: [\n                    {\n                      text: `Write test instructions for the following text: ${extractedText}`,\n                    },\n                  ],\n                },\n              ],\n            },\n            { headers: { \"Content-Type\": \"application/json\" } }\n          );\n          setAnswer(\n            response.data.candidates[0]?.content?.parts[0]?.text ||\n              \"No instructions generated\"\n          );\n        } else {\n          setAnswer(\"Failed to extract text from the image.\");\n        }\n      } else {\n        setAnswer(\"No image selected.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating answer:\", error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n\n    setGeneratingAnswer(false);\n  }\n\n  return (\n    <>\n      <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\">\n        <form\n          onSubmit={generateAnswer}\n          className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\"\n        >\n          <h1 className=\"text-4xl font-bold text-blue-500 mb-4 animate-bounce\">\n            Chat AI\n          </h1>\n          <textarea\n            required\n            className=\"border border-gray-300 rounded w-full my-2 min-h-fit p-3 transition-all duration-300 focus:border-blue-400 focus:shadow-lg\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            placeholder=\"Ask anything\"\n          ></textarea>\n\n          <input\n            type=\"file\"\n            className=\"my-2\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n\n          <button\n            type=\"submit\"\n            className={`bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${\n              generatingAnswer ? \"opacity-50 cursor-not-allowed\" : \"\"\n            }`}\n            disabled={generatingAnswer}\n          >\n            Generate answer\n          </button>\n        </form>\n\n        <div className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\">\n          <ReactMarkdown className=\"p-4\">{answer}</ReactMarkdown>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}