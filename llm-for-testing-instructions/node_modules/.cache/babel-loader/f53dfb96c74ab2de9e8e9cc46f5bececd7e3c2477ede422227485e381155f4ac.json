{"ast":null,"code":"var _jsxFileName = \"C:\\\\myracle-task\\\\llm-for-testing-instructions\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport { gapi } from \"gapi-script\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.setApiKey(process.env.REACT_APP_API_KEY);\n      gapi.client.load(\"https://generativelanguage.googleapis.com/v1beta/files\", \"upload\");\n      gapi.client.load(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest\", \"generateContent\");\n    };\n    gapi.load(\"client\", initClient);\n  }, []);\n  async function generateAnswer(e) {\n    setGeneratingAnswer(true);\n    e.preventDefault();\n    setAnswer(\"Loading your answer... \\n It might take up to 10 seconds\");\n    try {\n      var _response$result$cand, _response$result$cand2, _response$result$cand3;\n      // Upload the image if available\n      let imageUri = null;\n      if (image) {\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"mimeType\", image.type);\n        const uploadResponse = await gapi.client.generativelanguage.files.upload({\n          body: formData\n        });\n        imageUri = uploadResponse.result.file.uri; // Save the URI from the response\n      }\n\n      // Generate content with the image and question\n      const response = await gapi.client.generativelanguage.models.generateContent({\n        model: \"gemini-1.5-flash-latest\",\n        prompt: question,\n        fileData: imageUri ? {\n          fileUri: imageUri,\n          mimeType: image.type\n        } : null\n      });\n      setAnswer(((_response$result$cand = response.result.candidates[0]) === null || _response$result$cand === void 0 ? void 0 : (_response$result$cand2 = _response$result$cand.content) === null || _response$result$cand2 === void 0 ? void 0 : (_response$result$cand3 = _response$result$cand2.parts[0]) === null || _response$result$cand3 === void 0 ? void 0 : _response$result$cand3.text) || \"No answer generated\");\n    } catch (error) {\n      console.log(error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n    setGeneratingAnswer(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: generateAnswer,\n        className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-blue-500 mb-4 animate-bounce\",\n          children: \"Chat AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          className: \"border border-gray-300 rounded w-full my-2 min-h-fit p-3 transition-all duration-300 focus:border-blue-400 focus:shadow-lg\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask anything\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"my-2\",\n          accept: \"image/*\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${generatingAnswer ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n          disabled: generatingAnswer,\n          children: \"Generate answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"p-4\",\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Cb7NP297sm+2dXLEMn5ZEJeBaXY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ReactMarkdown","gapi","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","question","setQuestion","image","setImage","answer","setAnswer","generatingAnswer","setGeneratingAnswer","initClient","client","setApiKey","process","env","REACT_APP_API_KEY","load","generateAnswer","e","preventDefault","_response$result$cand","_response$result$cand2","_response$result$cand3","imageUri","formData","FormData","append","type","uploadResponse","generativelanguage","files","upload","body","result","file","uri","response","models","generateContent","model","prompt","fileData","fileUri","mimeType","candidates","content","parts","text","error","console","log","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","required","value","onChange","target","placeholder","accept","disabled","_c","$RefreshReg$"],"sources":["C:/myracle-task/llm-for-testing-instructions/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport { gapi } from \"gapi-script\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.setApiKey(process.env.REACT_APP_API_KEY);\n      gapi.client.load(\n        \"https://generativelanguage.googleapis.com/v1beta/files\",\n        \"upload\"\n      );\n      gapi.client.load(\n        \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest\",\n        \"generateContent\"\n      );\n    };\n    gapi.load(\"client\", initClient);\n  }, []);\n\n  async function generateAnswer(e) {\n    setGeneratingAnswer(true);\n    e.preventDefault();\n    setAnswer(\"Loading your answer... \\n It might take up to 10 seconds\");\n\n    try {\n      // Upload the image if available\n      let imageUri = null;\n      if (image) {\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"mimeType\", image.type);\n\n        const uploadResponse =\n          await gapi.client.generativelanguage.files.upload({\n            body: formData,\n          });\n        imageUri = uploadResponse.result.file.uri; // Save the URI from the response\n      }\n\n      // Generate content with the image and question\n      const response =\n        await gapi.client.generativelanguage.models.generateContent({\n          model: \"gemini-1.5-flash-latest\",\n          prompt: question,\n          fileData: imageUri\n            ? { fileUri: imageUri, mimeType: image.type }\n            : null,\n        });\n\n      setAnswer(\n        response.result.candidates[0]?.content?.parts[0]?.text ||\n          \"No answer generated\"\n      );\n    } catch (error) {\n      console.log(error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n\n    setGeneratingAnswer(false);\n  }\n\n  return (\n    <>\n      <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\">\n        <form\n          onSubmit={generateAnswer}\n          className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\"\n        >\n          <h1 className=\"text-4xl font-bold text-blue-500 mb-4 animate-bounce\">\n            Chat AI\n          </h1>\n          <textarea\n            required\n            className=\"border border-gray-300 rounded w-full my-2 min-h-fit p-3 transition-all duration-300 focus:border-blue-400 focus:shadow-lg\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            placeholder=\"Ask anything\"\n          ></textarea>\n\n          <input\n            type=\"file\"\n            className=\"my-2\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n\n          <button\n            type=\"submit\"\n            className={`bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${\n              generatingAnswer ? \"opacity-50 cursor-not-allowed\" : \"\"\n            }`}\n            disabled={generatingAnswer}\n          >\n            Generate answer\n          </button>\n        </form>\n\n        <div className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\">\n          <ReactMarkdown className=\"p-4\">{answer}</ReactMarkdown>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}