{"ast":null,"code":"var _jsxFileName = \"C:\\\\myracle-task\\\\llm-for-testing-instructions\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [instructions, setInstructions] = useState(\"\");\n  const [generatingInstructions, setGeneratingInstructions] = useState(false);\n  async function handleImageUpload(e) {\n    setGeneratingInstructions(true);\n    e.preventDefault();\n    try {\n      var _instructionsResponse;\n      let imageUri = null;\n      if (image) {\n        const formData = new FormData();\n        formData.append(\"file\", image);\n\n        // Upload the image to your server or directly to a cloud service\n        const uploadResponse = await axios({\n          url: `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`,\n          method: \"post\",\n          data: formData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        imageUri = uploadResponse.data.imageUrl;\n      }\n\n      // Extract text from the image\n      const textResponse = await axios({\n        url: `https://your-backend-api/analyze`,\n        method: \"post\",\n        data: {\n          imageUri\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const extractedText = textResponse.data.text;\n\n      // Generate test instructions based on extracted text\n      const instructionsResponse = await axios({\n        url: `https://api.openai.com/v1/completions`,\n        method: \"post\",\n        data: {\n          model: \"text-davinci-003\",\n          prompt: `Write test instructions for the following features:\\n\\n${extractedText}`,\n          max_tokens: 300\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        }\n      });\n      setInstructions(((_instructionsResponse = instructionsResponse.data.choices[0]) === null || _instructionsResponse === void 0 ? void 0 : _instructionsResponse.text) || \"No instructions generated\");\n    } catch (error) {\n      console.error(error);\n      setInstructions(\"Sorry - Something went wrong. Please try again!\");\n    }\n    setGeneratingInstructions(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleImageUpload,\n      className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-blue-500 mb-4 animate-bounce\",\n        children: \"Test Instructions Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"my-2\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${generatingInstructions ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n        disabled: generatingInstructions,\n        children: \"Generate Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"p-4\",\n        children: instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"loDQVIdpIPasEiKAiz+LUtf4WOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","image","setImage","instructions","setInstructions","generatingInstructions","setGeneratingInstructions","handleImageUpload","e","preventDefault","_instructionsResponse","imageUri","formData","FormData","append","uploadResponse","url","process","env","REACT_APP_API_KEY","method","data","headers","imageUrl","textResponse","extractedText","text","instructionsResponse","model","prompt","max_tokens","Authorization","REACT_APP_OPENAI_API_KEY","choices","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","target","files","disabled","_c","$RefreshReg$"],"sources":["C:/myracle-task/llm-for-testing-instructions/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [instructions, setInstructions] = useState(\"\");\r\n  const [generatingInstructions, setGeneratingInstructions] = useState(false);\r\n\r\n  async function handleImageUpload(e) {\r\n    setGeneratingInstructions(true);\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let imageUri = null;\r\n      if (image) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", image);\r\n\r\n        // Upload the image to your server or directly to a cloud service\r\n        const uploadResponse = await axios({\r\n          url: `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.REACT_APP_API_KEY}`,\r\n          method: \"post\",\r\n          data: formData,\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        imageUri = uploadResponse.data.imageUrl;\r\n      }\r\n\r\n      // Extract text from the image\r\n      const textResponse = await axios({\r\n        url: `https://your-backend-api/analyze`,\r\n        method: \"post\",\r\n        data: { imageUri },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const extractedText = textResponse.data.text;\r\n\r\n      // Generate test instructions based on extracted text\r\n      const instructionsResponse = await axios({\r\n        url: `https://api.openai.com/v1/completions`,\r\n        method: \"post\",\r\n        data: {\r\n          model: \"text-davinci-003\",\r\n          prompt: `Write test instructions for the following features:\\n\\n${extractedText}`,\r\n          max_tokens: 300,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\r\n        },\r\n      });\r\n\r\n      setInstructions(\r\n        instructionsResponse.data.choices[0]?.text ||\r\n          \"No instructions generated\"\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n      setInstructions(\"Sorry - Something went wrong. Please try again!\");\r\n    }\r\n\r\n    setGeneratingInstructions(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 h-screen p-3 flex flex-col justify-center items-center\">\r\n      <form\r\n        onSubmit={handleImageUpload}\r\n        className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg shadow-lg bg-white py-6 px-4 transition-all duration-500 transform hover:scale-105\"\r\n      >\r\n        <h1 className=\"text-4xl font-bold text-blue-500 mb-4 animate-bounce\">\r\n          Test Instructions Generator\r\n        </h1>\r\n        <input\r\n          type=\"file\"\r\n          className=\"my-2\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className={`bg-blue-500 text-white p-3 rounded-md hover:bg-blue-600 transition-all duration-300 ${\r\n            generatingInstructions ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n          }`}\r\n          disabled={generatingInstructions}\r\n        >\r\n          Generate Instructions\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"w-full md:w-2/3 lg:w-1/2 xl:w-1/3 text-center rounded-lg bg-white my-4 shadow-lg transition-all duration-500 transform hover:scale-105\">\r\n        <ReactMarkdown className=\"p-4\">{instructions}</ReactMarkdown>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}